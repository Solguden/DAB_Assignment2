// <auto-generated />
using System;
using DAB_Assignment2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAB_Assignment2.Migrations
{
    [DbContext(typeof(MyDB))]
    partial class MyDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("DAB_Assignment2.Models.Dish", b =>
                {
                    b.Property<string>("DishId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DishName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ReviewId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("DishId");

                    b.HasIndex("ReviewId");

                    b.ToTable("dishes");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Guest", b =>
                {
                    b.Property<string>("GuestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewsReviewId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("GuestId");

                    b.HasIndex("ReviewsReviewId");

                    b.ToTable("guests");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Person", b =>
                {
                    b.Property<string>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("WaiterID")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonId");

                    b.HasIndex("GuestID")
                        .IsUnique();

                    b.HasIndex("WaiterID")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Relations.GuestDish", b =>
                {
                    b.Property<string>("GuestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DishId")
                        .HasColumnType("TEXT");

                    b.HasKey("GuestId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("GuestDish");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Relations.RestaurantDish", b =>
                {
                    b.Property<string>("DishId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RestaurantId")
                        .HasColumnType("TEXT");

                    b.HasKey("DishId", "RestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantDish");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Relations.WaiterTable", b =>
                {
                    b.Property<string>("WaiterId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TableId")
                        .HasColumnType("TEXT");

                    b.HasKey("WaiterId", "TableId");

                    b.HasIndex("TableId");

                    b.ToTable("WaiterTable");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Restaurant", b =>
                {
                    b.Property<string>("RestaurantId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("RestaurantId");

                    b.ToTable("restaurants");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Review", b =>
                {
                    b.Property<string>("ReviewId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RestaurantId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stars")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("ReviewId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Table", b =>
                {
                    b.Property<string>("TableId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuestId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RestaurantId")
                        .HasColumnType("TEXT");

                    b.HasKey("TableId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("tables");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Waiter", b =>
                {
                    b.Property<string>("WaiterId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Salary")
                        .HasColumnType("REAL");

                    b.HasKey("WaiterId");

                    b.ToTable("waiters");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Dish", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Review", "Review")
                        .WithMany("Dishes")
                        .HasForeignKey("ReviewId");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Guest", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Review", "Reviews")
                        .WithMany("Guests")
                        .HasForeignKey("ReviewsReviewId");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Person", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Guest", "Guest")
                        .WithOne("Person")
                        .HasForeignKey("DAB_Assignment2.Models.Person", "GuestID");

                    b.HasOne("DAB_Assignment2.Models.Waiter", "Waiter")
                        .WithOne("Person")
                        .HasForeignKey("DAB_Assignment2.Models.Person", "WaiterID");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Relations.GuestDish", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Dish", "Dish")
                        .WithMany("GuestDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAB_Assignment2.Models.Guest", "Guest")
                        .WithMany("GuestDishes")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Relations.RestaurantDish", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Dish", "Dish")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAB_Assignment2.Models.Restaurant", "Restaurant")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Relations.WaiterTable", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Table", "Table")
                        .WithMany("WaiterTables")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAB_Assignment2.Models.Waiter", "Waiter")
                        .WithMany("WaiterTables")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Review", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Restaurant", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("DAB_Assignment2.Models.Table", b =>
                {
                    b.HasOne("DAB_Assignment2.Models.Guest", "Guest")
                        .WithMany("Tables")
                        .HasForeignKey("GuestId");

                    b.HasOne("DAB_Assignment2.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId");
                });
#pragma warning restore 612, 618
        }
    }
}
